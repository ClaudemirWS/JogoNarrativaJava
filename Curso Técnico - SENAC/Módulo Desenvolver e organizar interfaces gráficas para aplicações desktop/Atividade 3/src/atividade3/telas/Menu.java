package atividade3.telas;

import javax.swing.table.DefaultTableModel;
import atividade3.model.Consulta;
import atividade3.model.ListaConsultas;
import javax.swing.JOptionPane;

/**
 * @author Claudemir
 */
public class Menu extends javax.swing.JFrame {

    //INICIA CLASSES QUE SERÃO UTILIZADAS
    private NovaConsulta consulta  = new NovaConsulta();
    private DetalhesConsulta detalhes = new DetalhesConsulta();

    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Menu = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        Tabela = new javax.swing.JTable();
        butNovConsulta = new javax.swing.JButton();
        butExcConsulta = new javax.swing.JButton();
        butFinConsulta = new javax.swing.JButton();
        butAtualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu Principal");

        lblTitulo.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        lblTitulo.setText("Boas vindas ao sistema de agendamento");

        Tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Paciente", "CPF", "Telefone", "Data", "Já era paciente?", "Consulta finalizada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ScrollPane.setViewportView(Tabela);

        butNovConsulta.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        butNovConsulta.setText("Nova Consulta");
        butNovConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butNovConsultaActionPerformed(evt);
            }
        });

        butExcConsulta.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        butExcConsulta.setText("Excluir Consulta");
        butExcConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butExcConsultaActionPerformed(evt);
            }
        });

        butFinConsulta.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        butFinConsulta.setText("Finalizar Consulta");
        butFinConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butFinConsultaActionPerformed(evt);
            }
        });

        butAtualizar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        butAtualizar.setText("Atualizar");
        butAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuLayout = new javax.swing.GroupLayout(Menu);
        Menu.setLayout(MenuLayout);
        MenuLayout.setHorizontalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuLayout.createSequentialGroup()
                        .addComponent(butNovConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butExcConsulta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butFinConsulta))
                    .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, MenuLayout.createSequentialGroup()
                            .addComponent(lblTitulo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(butAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(ScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        MenuLayout.setVerticalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(lblTitulo))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(butAtualizar)))
                .addGap(18, 18, 18)
                .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butNovConsulta)
                    .addComponent(butExcConsulta)
                    .addComponent(butFinConsulta))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butNovConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butNovConsultaActionPerformed
        consulta.setVisible(true);
        atualizarTabela();
    }//GEN-LAST:event_butNovConsultaActionPerformed

    private void butAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAtualizarActionPerformed
        atualizarTabela();
    }//GEN-LAST:event_butAtualizarActionPerformed

    private void butExcConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butExcConsultaActionPerformed
        excluirConsulta(getposConsulta());
    }//GEN-LAST:event_butExcConsultaActionPerformed

    private void butFinConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butFinConsultaActionPerformed
        detalhaConsulta(getposConsulta());
    }//GEN-LAST:event_butFinConsultaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Menu;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JTable Tabela;
    private javax.swing.JButton butAtualizar;
    private javax.swing.JButton butExcConsulta;
    private javax.swing.JButton butFinConsulta;
    private javax.swing.JButton butNovConsulta;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables

    //ATUALIZA OS ITENS NA TABELA
    public void atualizarTabela() {

        Tabela.setModel(consulta.getModeloTabela());
    }

    //PEGA A POSIÇÃO DA LINHA NA TABELA
    private int getposConsulta() {

        //PEGA A POSIÇÃO NA LINHA SELECIONADA NA TABELA
        int posConsulta = Tabela.getSelectedRow();

        //SE NÃO TIVER NENHUMA POSIÇÃO, EXIGE UMA
        if (posConsulta == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma consulta.");
        }
        return posConsulta;
    }

    //EXCLUI UMA LINHA POR VEZ
    private void excluirConsulta(int posConsulta) {

        if (posConsulta >= 0) {

            String[] options = {"Sim", "Não"};

            int deletar = JOptionPane.showOptionDialog(
                    rootPane,
                    "Tem certeza que deseja excluir?",
                    "Exclusão da consulta.",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[0]
            );

            if (deletar == 0) {
                ListaConsultas.Listar().remove(posConsulta);
                atualizarTabela();
            } else {
                Tabela.clearSelection();
            }
        }
    }

    //VERIFICA DETALHES DA CONSULTA SELECIONADA
    private void detalhaConsulta(int posConsulta) {

        if (posConsulta >= 0) {
            Consulta getRealizada;
            getRealizada = ListaConsultas.Listar().get(posConsulta);

            detalhes.setVisible(true); //ABRE OS DETALHES DA CONSULTA
            detalhes.setposConsulta(getposConsulta()); //CONFIRMA A CONSULTA SELECIONADA
            detalhes.getconsRealizada(getRealizada.getconsRealizada()); //CONFIRMA SE A CONSULTA FOI REALIZADA

        } else {
            Tabela.clearSelection();
        }
    } 

}
